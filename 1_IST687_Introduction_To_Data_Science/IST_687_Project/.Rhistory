library(readxl)
library(lubridate)
library(dplyr)
library(zoo)
library(lmtest)
library(sqldf)
library(varhandle)
library(car)
library(caret)
library(tidyr)
library(tidyverse)    # data manipulation and visualization
library(kernlab)      # SVM methodology
library(e1071)
#library(RColorBrewer)
library(arules)
library(arulesViz)
cleanData<- function(surveyDataRaw){
columns <- colnames(surveyDataRaw)
columns <- gsub(" ","_",columns)
#columns <- gsub("\\.","",columns)
columns <- gsub("%.","Percent_",columns)
colnames(surveyDataRaw) <- columns
numeric_columns<-colnames(surveyDataRaw)[!grepl('factor|logical|character',sapply(surveyDataRaw,class))]
categorical_columns<-colnames(surveyDataRaw)[grepl('factor|logical|character',sapply(surveyDataRaw,class))]
#surveyData <- na.aggregate(surveyDataRaw)
#Does any column have NA
sapply(surveyDataRaw,function(X) sum(is.na(X)))
sapply(surveyDataRaw,function(X) sum(is.na(X)))
#filter rows where Satisfaction is NA
surveyDataRaw<-surveyDataRaw[!is.na(surveyDataRaw$Satisfaction),]
#Set Departure delay and Arrival delay to mean if it is NA
meanDepartureDelay<-mean(surveyDataRaw$Departure_Delay_in_Minutes,na.rm = TRUE)
meanArrivalDelay<-mean(surveyDataRaw$Arrival_Delay_in_Minutes,na.rm = TRUE)
surveyDataRaw$Departure_Delay_in_Minutes <- replace_na(surveyDataRaw$Departure_Delay_in_Minutes,meanDepartureDelay)
surveyDataRaw$Arrival_Delay_in_Minutes <- replace_na(surveyDataRaw$Arrival_Delay_in_Minutes,meanArrivalDelay)
#find the source-destination combination which has NA
average_duration_by_path<-sqldf("select  avg(Flight_time_in_minutes) as average,Orgin_City,Destination_City from surveyDataRaw where Flight_time_in_minutes is not null group by Orgin_City,Destination_City")
getAverageByFlightPath<- function(time,origin,destination){
if(is.na(time)){
avg<-average_duration_by_path[(average_duration_by_path$Orgin_City==origin & average_duration_by_path$Destination_City==destination),]["average"]
avg <- as.list(avg)
return(round(as.numeric(avg[1])))
}
return (time)
}
surveyDataRaw$Flight_time_in_minutes<-mapply(getAverageByFlightPath,surveyDataRaw$Flight_time_in_minutes,surveyDataRaw$Orgin_City,surveyDataRaw$Destination_City)
return(surveyDataRaw)
}
loadSouthEastData <- function(){
surveyDataRaw <- readxl::read_excel("~/Downloads/FinalProjectMaterial_2_2/Satisfaction Survey(2).xlsx",col_types = "guess" )
surveyDataRaw<-cleanData(surveyDataRaw)
#Filter Southeast data
surveyDataRaw<- surveyDataRaw[surveyDataRaw$Airline_Name=="Southeast Airlines Co.",]
#confirm no more NA in data set
sapply(surveyDataRaw,function(X) sum(is.na(X)))
#there are 3 routes which doesn't have any flight time data, drop them
surveyDataRaw<-surveyDataRaw[!is.na(surveyDataRaw$Flight_time_in_minutes),]
#confirm one more time
sapply(surveyDataRaw,function(X) sum(is.na(X)))
fixNames <- function(name){
name <- gsub(" ","",name)
name <- gsub(",","_",name)
name <- gsub("&","_",name)
name <- gsub("/","_",name)
name <- gsub("-","_",name)
return(name)
}
surveyDataRaw$path = fixNames(paste(surveyDataRaw$Orgin_City,surveyDataRaw$Destination_City,sep="_TO_"))
#replace with means
#surveyData <-replace_na(surveyDataRaw,as.list(colMeans(surveyDataRaw,na.rm=T)))
surveyDataRaw$ageOfFirstflight = surveyDataRaw$Age - ( isoyear(surveyDataRaw$Flight_date) - surveyDataRaw$Year_of_First_Flight )
surveyDataRaw$Month_of_Year =  lubridate::month((surveyDataRaw$Flight_date))
surveyDataRaw$Month_of_Year<- as.factor(surveyDataRaw$Month_of_Year)
surveyDataRaw$Day_of_Month <- as.factor(surveyDataRaw$Day_of_Month)
#combine flight path
surveyDataRaw$departure_delay_gt_5  <- ifelse(surveyDataRaw$Departure_Delay_in_Minutes>5,1,0)
surveyDataRaw$departure_delay_gt_5 <- as.factor(surveyDataRaw$departure_delay_gt_5)
#surveyDataRaw$departure_delay_gt_15  <- ifelse(surveyDataRaw$Departure_Delay_in_Minutes>15,1,0)
#surveyDataRaw$departure_delay_gt_30  <- ifelse(surveyDataRaw$Departure_Delay_in_Minutes>30,1,0)
#surveyDataRaw$departure_delay_gt_60  <- ifelse(surveyDataRaw$Departure_Delay_in_Minutes>60,1,0)
#surveyDataRaw$departure_delay_gt_120  <- ifelse(surveyDataRaw$Departure_Delay_in_Minutes>120,1,0)
surveyDataRaw$arrival_delay_gt_5  <- ifelse(surveyDataRaw$Arrival_Delay_in_Minutes>5,1,0)
surveyDataRaw$arrival_delay_gt_5  <- as.factor(surveyDataRaw$arrival_delay_gt_5 )
#surveyDataRaw$arrival_delay_gt_15  <- ifelse(surveyDataRaw$Arrival_Delay_in_Minutes>15,1,0)
#surveyDataRaw$arrival_delay_gt_30  <- ifelse(surveyDataRaw$Arrival_Delay_in_Minutes>30,1,0)
#surveyDataRaw$arrival_delay_gt_60  <- ifelse(surveyDataRaw$Arrival_Delay_in_Minutes>60,1,0)
#surveyDataRaw$arrival_delay_gt_120  <- ifelse(surveyDataRaw$Arrival_Delay_in_Minutes>120,1,0)
#Drop the airline name and code
surveyDataRaw<- surveyDataRaw[,-which(names(surveyDataRaw) %in% c("Airline_Code","Airline_Name") )]
return(surveyDataRaw)
}
convertToFactors<- function(surveyDataRaw){
#Convert categorical to factors
#surveyDataRaw$Satisfaction<-as.factor(surveyDataRaw$Satisfaction)
#surveyDataRaw$Airline_Status<-as.factor(surveyDataRaw$Airline_Status)
##surveyDataRaw$Gender<-as.factor(surveyDataRaw$Gender)
#surveyDataRaw$Type_of_Travel<-as.factor(surveyDataRaw$Type_of_Travel)
#surveyDataRaw$Class<-as.factor(surveyDataRaw$Class)
#surveyDataRaw$Flight_cancelled<-as.factor(surveyDataRaw$Flight_cancelled)
#surveyDataRaw$path <- as.factor(surveyDataRaw$path)
categorical_columns<-colnames(surveyDataRaw)[grepl('factor|logical|character',sapply(surveyDataRaw,class))]
for(c in categorical_columns){
surveyDataRaw[[c]]<-as.factor(surveyDataRaw[[c]])
}
return(surveyDataRaw)
}
surveyDataRaw <- loadSouthEastData()
#Summary Statistics
numeric_columns<-colnames(surveyDataRaw)[!grepl('factor|logical|character',sapply(surveyDataRaw,class))]
categorical_columns<-colnames(surveyDataRaw)[grepl('factor|logical|character',sapply(surveyDataRaw,class))]
responseColumn<-"Satisfaction"
lmData<-surveyDataRaw
lm.base_model<-lm(formula=Satisfaction ~ . ,data=lmData[lmData$Type_of_Travel=="Business travel",])
lm.base_model<-lm(formula=Satisfaction ~ . ,data=lmData[lmData$Type_of_Travel=="Business travel",-9])
summary(lm.base_model)
